plugins {
    id 'java'
    // 可以在 dependencies 中使用 api 类型. 有关 api 和 implementation 的区别:
    // https://docs.gradle.org/current/userguide/java_library_plugin.html
    // id 'java-library'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
    id 'maven-publish'
}

sourceCompatibility = '17'
group = 'er'
version = '1.1.8-springboot-3.1.0'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url "https://jitpack.io" }
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven {
        url 'https://maven.pkg.github.com/cooocy/the-lands-between'
        // read only
        credentials {
            username System.getenv("MAVEN_USERNAME")
            password System.getenv("MAVEN_PASSWORD")
        }
    }
}

dependencies {
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // springboot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation("org.springframework:spring-aspects")

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // kits
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'er:carian:1.0.3'
    implementation 'cn.hutool:hutool-all:5.7.13'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

java {
    withSourcesJar()
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {

    repositories {
        maven {
            url 'https://maven.pkg.github.com/cooocy/the-lands-between'
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Rennala'
                description = 'A Web Server Infra via SpringBoot.'
                url = 'https://github.com/cooocy/rennala'
            }
        }
    }

}